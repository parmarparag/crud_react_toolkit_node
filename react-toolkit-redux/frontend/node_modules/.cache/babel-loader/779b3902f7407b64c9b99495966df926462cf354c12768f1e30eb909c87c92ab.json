{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { CREATE_REQUEST } from \"../store/actionTypes\";\nimport { API_BASE_URL } from \"../constant\";\nexport const createUser = createAsyncThunk(CREATE_REQUEST, async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}api/create`, userData);\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst addSlice = createSlice({\n  name: \"create\",\n  initialState: {\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(createUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(createUser.fulfilled, state => {\n      state.loading = false;\n    }).addCase(createUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload.message;\n    });\n  }\n});\nexport default addSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","CREATE_REQUEST","API_BASE_URL","createUser","userData","rejectWithValue","response","post","error","data","addSlice","name","initialState","loading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","rejected","action","payload","message","reducer"],"sources":["/Users/parmarparag/Desktop/crud 2/frontend/src/features/createSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { CREATE_REQUEST } from \"../store/actionTypes\";\nimport { API_BASE_URL } from \"../constant\";\n\nexport const createUser = createAsyncThunk(\n  CREATE_REQUEST,\n  async (userData, { rejectWithValue }) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}api/create`, userData);\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst addSlice = createSlice({\n  name: \"create\",\n  initialState: {\n    loading: false,\n    error: null,\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(createUser.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(createUser.fulfilled, (state) => {\n        state.loading = false;\n      })\n      .addCase(createUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload.message;\n      });\n  },\n});\n\nexport default addSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,YAAY,QAAQ,aAAa;AAE1C,OAAO,MAAMC,UAAU,GAAGJ,gBAAgB,CACxCE,cAAc,EACd,OAAOG,QAAQ,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAE,GAAEL,YAAa,YAAW,EAAEE,QAAQ,CAAC;EAC1E,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,OAAOH,eAAe,CAACG,KAAK,CAACF,QAAQ,CAACG,IAAI,CAAC;EAC7C;AACF,CACF,CAAC;AAED,MAAMC,QAAQ,GAAGZ,WAAW,CAAC;EAC3Ba,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,OAAO,EAAE,KAAK;IACdL,KAAK,EAAE;EACT,CAAC;EACDM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACd,UAAU,CAACe,OAAO,EAAGC,KAAK,IAAK;MACtCA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACX,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDS,OAAO,CAACd,UAAU,CAACiB,SAAS,EAAGD,KAAK,IAAK;MACxCA,KAAK,CAACN,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC,CACDI,OAAO,CAACd,UAAU,CAACkB,QAAQ,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MAC/CH,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACX,KAAK,GAAGc,MAAM,CAACC,OAAO,CAACC,OAAO;IACtC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAed,QAAQ,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}