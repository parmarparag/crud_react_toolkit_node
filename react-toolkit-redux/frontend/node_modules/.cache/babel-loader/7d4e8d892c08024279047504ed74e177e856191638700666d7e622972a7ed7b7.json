{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { FETCH_REQUEST, FETCH_SUCCESS, FETCH_FAILURE } from \"../store/actionTypes\";\nexport const fetchUsers = createAsyncThunk(FETCH_REQUEST, async (_, {\n  rejectWithValue\n}) => {\n  try {\n    log;\n    const response = await axios.get(\"localhost:3000/api/getall\");\n    console.log(\"response===>\", response);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst readSlice = createSlice({\n  name: \"read\",\n  initialState: {\n    users: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(FETCH_REQUEST, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(FETCH_SUCCESS, (state, action) => {\n      state.loading = false;\n      state.users = action.payload;\n    }).addCase(FETCH_FAILURE, (state, action) => {\n      state.loading = false;\n      state.error = action.payload.message;\n    });\n  }\n});\nexport default readSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","FETCH_REQUEST","FETCH_SUCCESS","FETCH_FAILURE","fetchUsers","_","rejectWithValue","log","response","get","console","data","error","readSlice","name","initialState","users","loading","reducers","extraReducers","builder","addCase","state","action","payload","message","reducer"],"sources":["/Users/parmarparag/Desktop/crud 2/frontend/src/features/readSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport {\n  FETCH_REQUEST,\n  FETCH_SUCCESS,\n  FETCH_FAILURE,\n} from \"../store/actionTypes\";\n\nexport const fetchUsers = createAsyncThunk(\n  FETCH_REQUEST,\n  async (_, { rejectWithValue }) => {\n    try {\n        log\n      const response = await axios.get(\"localhost:3000/api/getall\");\n      console.log(\"response===>\", response);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst readSlice = createSlice({\n  name: \"read\",\n  initialState: {\n    users: [],\n    loading: false,\n    error: null,\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(FETCH_REQUEST, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(FETCH_SUCCESS, (state, action) => {\n        state.loading = false;\n        state.users = action.payload;\n      })\n      .addCase(FETCH_FAILURE, (state, action) => {\n        state.loading = false;\n        state.error = action.payload.message;\n      });\n  },\n});\n\nexport default readSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,aAAa,EACbC,aAAa,EACbC,aAAa,QACR,sBAAsB;AAE7B,OAAO,MAAMC,UAAU,GAAGL,gBAAgB,CACxCE,aAAa,EACb,OAAOI,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EAChC,IAAI;IACAC,GAAG;IACL,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,2BAA2B,CAAC;IAC7DC,OAAO,CAACH,GAAG,CAAC,cAAc,EAAEC,QAAQ,CAAC;IACrC,OAAOA,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAON,eAAe,CAACM,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAAC;EAC7C;AACF,CACF,CAAC;AAED,MAAME,SAAS,GAAGf,WAAW,CAAC;EAC5BgB,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,KAAK;IACdL,KAAK,EAAE;EACT,CAAC;EACDM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACpB,aAAa,EAAGqB,KAAK,IAAK;MACjCA,KAAK,CAACL,OAAO,GAAG,IAAI;MACpBK,KAAK,CAACV,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDS,OAAO,CAACnB,aAAa,EAAE,CAACoB,KAAK,EAAEC,MAAM,KAAK;MACzCD,KAAK,CAACL,OAAO,GAAG,KAAK;MACrBK,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDH,OAAO,CAAClB,aAAa,EAAE,CAACmB,KAAK,EAAEC,MAAM,KAAK;MACzCD,KAAK,CAACL,OAAO,GAAG,KAAK;MACrBK,KAAK,CAACV,KAAK,GAAGW,MAAM,CAACC,OAAO,CAACC,OAAO;IACtC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeZ,SAAS,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}